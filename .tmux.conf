# Change prefix to M+a, since C-a interferes with readline temirnal bindings
unbind C-b
set -g prefix M-a   

# This allows you to send the Alt-a key combination to applications inside tmux
# by pressing Alt-a twice.
bind-key M-a send-prefix

# Split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# Reload config file
bind r source-file ~/.tmux.conf

# Don't rename windows automatically
set-option -g allow-rename off

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# Configure copy mode
# Now we can enter copy mode by pressing <prefix>,[, and then go to start point,
# press ‘v’ and start copying. After selecting the text we can just press ‘y’
# (or the default ‘enter’ key) to copy the text into Tmux’s buffer.
#
# To paste, press <prefix>,P. 
bind P paste-buffer

# Tmux has it’s own buffer for coppying. However, we can copy from tmux buffer
# to system buffer (clipboard)
#
# For this to happen, we need xclip installed (use apt)
# These bindings set up a "vi-like" mode for text selection in tmux:
#    v starts the text selection (similar to vi's visual mode).
#    y copies the selected text.
#    Escape cancels the selection mode.
#    V toggles the rectangular text selection mode.
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
bind-key -Tcopy-mode-vi Escape send -X cancel
bind-key -Tcopy-mode-vi V send -X rectangle-toggle

# Allow copying from tmux to the system clipboard 
bind-key -Tcopy-mode-vi 'y' \
    send -X copy-selection-and-cancel \
    \; display-message "Copied to clipboard" \
    \; run-shell "tmux show-buffer | xclip -selection clipboard"
# Instead of the above config, which requires you to enter vi-copy-mode, we'll
# enable mouse selection copy to clipboard
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
# bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Quiet mode
set-option -g visual-bell off
set-option -g bell-action none

# Start with window 1 (instead of 0)
set -g base-index 1

# Screen mode
set -g default-terminal "screen-256color"

# Set history
set -g history-limit 1000000

# Allow terminal scrolling
# This setting allows for scrolling with the terminal's native scrollback buffer
# even when tmux is running. The smcup and rmcup capabilities are associated
# with switching to and from the alternate screen buffer (used by programs like
# vim or less). By overriding these, you ensure that programs run inside tmux
# stay in the primary screen buffer, allowing for native terminal scrolling.
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Bind colon : to be command prompt
bind : command-prompt

# Moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# status-justify left:
#    This setting left-aligns window lists in the status line.
# status-interval 2:
#    This determines how often tmux updates the status line.
#    It's set to update every 2 seconds.
set -g status-justify left
set -g status-interval 2

# Style

##  The modes
# clock-mode-colour:
#    Specifies the color used for the clock when tmux's clock mode is
#    activated. Here, it's set to colour135.
# mode-style:
#    This setting determines the style of the status line when in a mode (like
#    copy mode). Here, the foreground is set to colour196, the background to
#    colour238, and the text is bold.
setw -g clock-mode-colour colour135
set-option -g mode-style "fg=colour196, bg=colour238,bold"

## The panes
# pane-border-style:
#    Determines the style of borders around non-active tmux panes. Here, the
#    background is set to colour235 and the foreground to colour238.
# pane-active-border-style:
#    Determines the style of borders around the active tmux pane. The background
#    is colour236 and the foreground is colour51.
set -g pane-border-style "bg=colour235,fg=colour238"
set -g pane-active-border-style "bg=colour236,fg=colour51"

## The statusbar

# Place the statusbar at the botton of the tmux session
set -g status-position bottom

# Overall status bar style. Background color of colour234, foreground color of
# colour12, and the text is dimmed.
set -g status-style "bg=colour234,fg=colour12,dim"

# WHat appears on the left and right side of the status bar. The left side is
# empty (status-left), while the right side (status-right) displays the current
# date and time in specific colors.
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '

# These set the maximum lengths for the content defined by status-left and
# status-right.
set -g status-right-length 50
set -g status-left-length 20

# Define the appearance of the currently active window in the status bar. The
# style uses specific foreground and background colors, and the format includes
# the window index (#I), window name (#W), and window flags (#F).
setw -g window-status-current-style "fg=colour81,bg=colour238,bold"
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

# Same as above, but for non-active windows in the status bar
setw -g window-status-style "fg=colour138,bg=colour235"
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# Style of a window in the status bar that receibed a bell signal
setw -g window-status-bell-style "bg=colour1,fg=colour255"

# Messages, such as those that appearn when you're prompted for input or
# when errors occur
set -g message-style "fg=colour232,bg=colour166,bold "
